{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/saiyan_n/Desktop/React Full Stack/first/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'; //import Navbar from Component Folder \n\nimport Users from './components/users/Users';\nimport User from './components/users/user';\nimport Search from './components/users/search';\nimport Alert from './components/layout/alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null,\n      repos: []\n    };\n\n    this.SearchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      user,\n      loading,\n      repos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  SearchUsers: this.SearchUsers,\n                  clearUsers: this.clearUsers,\n                  showClear: users.length > 0 ? true : false,\n                  setAlert: this.setAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Users, {\n                  loading: loading,\n                  users: users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: this.getUser,\n                getUserRepos: this.getUserRepos,\n                user: user,\n                repos: repos,\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saiyan_n/Desktop/React Full Stack/first/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","loading","alert","repos","SearchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';//import Navbar from Component Folder \nimport Users from './components/users/Users';\nimport User from './components/users/user';\nimport Search from './components/users/search';\nimport Alert from './components/layout/alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    users: [],\n    user: {},\n    loading: false,\n    alert: null,\n    repos: []\n  }\n\n  \n  SearchUsers = async text => {\n    this.setState({ loading: true });\n    \n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n   \n    this.setState({ users: res.data.items, loading:false });\n  };\n  \n  //Get Single User\n\n  getUser = async username => {\n    this.setState({ loading: true });\n    \n\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n   \n    this.setState({ user: res.data, loading:false });\n  };\n\n  //Get User Repos\n  getUserRepos = async username => {\n    this.setState({ loading: true });\n    \n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n   \n    this.setState({ repos: res.data, loading:false });\n  };\n  \n  //Clear Users\n\n  clearUsers = () => this.setState({ users: [], loading: false });\n\n//Set Alert\n\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n\n  render() {\n    const { users, user, loading, repos } = this.state;\n    return (\n      <Router>\n      <div className=\"App\">\n       {/* Navbar */}\n        <Navbar />\n        <div className=\"container\">\n          <Alert alert={this.state.alert} />\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n                   < Search SearchUsers={this.SearchUsers} clearUsers={this.clearUsers} \n          showClear={users.length > 0 ? true : false} setAlert={this.setAlert} />\n          <Users loading={loading} users={users} />\n              </Fragment>\n            )} />\n            <Route exact path='/about' component={About} />\n             <Route exact path='/user/:login' render={props => (\n               <User { ...props }\n                getUser={this.getUser}\n                getUserRepos={this.getUserRepos}  \n                user={user}\n                repos={repos} \n                loading={loading} />\n             )} /> \n         </Switch>\n         \n        </div>\n        \n      </div>\n      </Router>\n    );\n  \n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}