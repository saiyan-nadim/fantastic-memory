{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment,useEffect,useContext}from'react';import Spinner from'../layout/Spinner';import Repos from'../Repos/Repos';import{Link}from'react-router-dom';import GithubContext from'../../context/Github/githubContext';var User=function User(_ref){var match=_ref.match;var githubContext=useContext(GithubContext);var getUser=githubContext.getUser,loading=githubContext.loading,user=githubContext.user,repos=githubContext.repos,getUserRepos=githubContext.getUserRepos;useEffect(function(){getUser(match.params.login);getUserRepos(match.params.login);// eslint-disable-next-line\n},[]);var name=user.name,company=user.company,avatar_url=user.avatar_url,bio=user.bio,location=user.location,blog=user.blog,login=user.login,html_url=user.html_url,followers=user.followers,following=user.following,public_repos=user.public_repos,public_gists=user.public_gists,hireable=user.hireable;if(loading)return/*#__PURE__*/_jsx(Spinner,{});return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light\",children:\"Back to Search\"}),\"Hireable: \",' ',hireable?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check text-success\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times-circle text-danger\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card grid-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"all-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:avatar_url,alt:\"\",className:\"round-img\",style:{width:'150px'}}),/*#__PURE__*/_jsx(\"h1\",{children:name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Location: \",location]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[bio&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bio\"}),/*#__PURE__*/_jsx(\"p\",{children:bio})]}),/*#__PURE__*/_jsx(\"a\",{href:html_url,className:\"btn btn-dark my-1\",children:\"Visit Github Profile\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:login&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Username: \"}),\" \",login]})}),/*#__PURE__*/_jsx(\"li\",{children:company&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company: \"}),\" \",company]})}),/*#__PURE__*/_jsx(\"li\",{children:blog&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Website: \"}),\" \",blog]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-primary\",children:[\"Followers: \",followers,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-success\",children:[\"Following: \",following,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-light\",children:[\"public_Repos: \",public_repos,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-dark\",children:[\"Public Gists: \",public_gists,\" \"]})]}),/*#__PURE__*/_jsx(Repos,{repos:repos})]});};export default User;","map":{"version":3,"sources":["/home/saiyan_n/Desktop/React Full Stack/first/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","Link","GithubContext","User","match","githubContext","getUser","loading","user","repos","getUserRepos","params","login","name","company","avatar_url","bio","location","blog","html_url","followers","following","public_repos","public_gists","hireable","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport  Repos  from '../Repos/Repos';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/Github/githubContext';\n\n\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext); \n\n    const { getUser, loading, user, repos, getUserRepos } = githubContext;\n   \n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        // eslint-disable-next-line\n    }, []);\n    \n             \n    const {\n            name,\n            company,\n            avatar_url,\n            bio,\n            location,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = user;\n\n       \n        if(loading) return <Spinner />\n\n        return <Fragment>\n               <Link to='/' className='btn btn-light' >\n                   Back to Search\n               </Link>\n               Hireable: {' '}\n               {hireable ? ( \n               <i className='fas fa-check text-success' />\n               ) : (\n                <i className='fas fa-times-circle text-danger' />\n               )}\n                \n                <div className=\"card grid-2\">\n                    <div className=\"all-center\">\n                        <img src={avatar_url} alt=\"\" className=\"round-img\" style={{ width: '150px' }} />\n                   <h1>{name}</h1>\n                   <p>Location: {location}</p>\n                    </div>\n                    <div>\n                        {bio && ( <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                            </Fragment>\n                            )}\n                            <a href={html_url} className='btn btn-dark my-1'>\n                                Visit Github Profile\n                            </a>\n                            <ul>\n                                <li>\n                                    {login && <Fragment>\n                                        <strong>Username: </strong> {login}\n                                        </Fragment>}\n                                </li>\n                                <li>\n                                    {company && <Fragment>\n                                        <strong>Company: </strong> {company}\n                                        </Fragment>}\n                                </li>\n                                <li>\n                                    {blog && <Fragment>\n                                        <strong>Website: </strong> {blog}\n                                        </Fragment>}\n                                </li>\n                            </ul>\n                    </div>\n                </div>\n\n                <div className=\"card text-center\">\n                    <div className=\"badge badge-primary\">Followers: {followers} </div>\n                    <div className=\"badge badge-success\">Following: {following} </div>\n                    <div className=\"badge badge-light\">public_Repos: {public_repos} </div>\n                    <div className=\"badge badge-dark\">Public Gists: {public_gists} </div>\n                </div>\n\n                <Repos repos={repos} />\n            </Fragment>\n        \n    \n}\n\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}