{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/saiyan_n/Desktop/React Full Stack/first/src/components/users/search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst search = ({\n  SearchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter a valid name', 'light');\n    } else {\n      SearchUsers(this.state.text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit.bind(this),\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search Users..\",\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        className: \"btn btn-dark btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: clearUsers,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n\n_s(search, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\nSearch.propTypes = {\n  SearchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default search;","map":{"version":3,"sources":["/home/saiyan_n/Desktop/React Full Stack/first/src/components/users/search.js"],"names":["React","useState","PropTypes","search","SearchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","e","preventDefault","state","onChange","target","value","bind","Search","propTypes","func","isRequired","bool"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA;;AACjE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEF,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,IAAI,KAAK,EAAZ,EAAgB;AACZD,MAAAA,QAAQ,CAAC,2BAAD,EAA8B,OAA9B,CAAR;AACH,KAFD,MAEO;AAEPH,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWL,IAAZ,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACC;AAEJ,GAVH;;AAYA,QAAMK,QAAQ,GAAIH,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAA/B;;AAEI,sBACM;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEN,QAAQ,CAACO,IAAT,CAAc,IAAd,CAAhB;AAAqC,MAAA,SAAS,EAAC,MAA/C;AAAA,8BACI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,gBAHZ;AAIA,QAAA,KAAK,EAAET,IAJP;AAKA,QAAA,QAAQ,EAAEM;AALV;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAO,QAAA,IAAI,EAAC,QAAZ;AACA,QAAA,KAAK,EAAC,QADN;AACe,QAAA,SAAS,EAAC;AADzB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAWKT,SAAS,iBACN;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AACA,MAAA,OAAO,EAAEC,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAmBD,CApCL;;GAAMH,M;;AAsCNe,MAAM,CAACC,SAAP,GAAmB;AACff,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADb;AAEff,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFZ;AAGfhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHX;AAIfd,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst search = ({ SearchUsers, showClear, clearUsers, setAlert }) => {\n    const [text, setText] = useState('');\n\n  const onSubmit = e => {\n        e.preventDefault();\n        if(text === '') {\n            setAlert('Please enter a valid name', 'light');\n        } else {\n\n        SearchUsers(this.state.text);\n        setText('');\n        }\n\n    }\n\n  const onChange = (e) => setText(e.target.value);\n\n      return (\n            <div>\n                <form onSubmit={onSubmit.bind(this)} className=\"form\">\n                    <input \n                    type=\"text\"\n                    name=\"text\" \n                    placeholder=\"Search Users..\"\n                    value={text} \n                    onChange={onChange} />\n                    <input type=\"submit\" \n                    value=\"Search\" className=\"btn btn-dark btn-block\" />\n                </form>\n                {showClear && (\n                    <button className=\"btn btn-light btn-block\" \n                    onClick={clearUsers}>Clear</button>\n                )}\n                \n            </div>\n        )\n    }\n\nSearch.propTypes = {\n    SearchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default search\n"]},"metadata":{},"sourceType":"module"}