{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/saiyan_n/Desktop/React Full Stack/first/src/context/Github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const SearchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n  // Get Repos\n  //Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); //Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      SearchUsers\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 6\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/saiyan_n/Desktop/React Full Stack/first/src/context/Github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","SearchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","clearUsers","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,QAOO,UAPP;;AASA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CARyB,CAUzB;;AAEA,QAAMO,WAAW,GAAG,MAAMC,IAAN,IAAc;AAC9BC,IAAAA,UAAU;AAET,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAAxK,CAAlB;AAEFT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEvB,YADD;AAELwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFb,KAAD,CAAR;AAKC,GAVJ,CAZyB,CAyBzB;AAEA;AAGA;;;AAEA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAErB;AAAR,GAAD,CAAjC,CAhCyB,CAkCzB;;;AACG,QAAMc,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAAjC;;AAEH,sBACC,QAAC,aAAD,CAAe,QAAf;AACD,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFT;AAGHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHV;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHG,MAAAA;AALG,KADN;AAAA,cASIR,KAAK,CAACsB;AATV;AAAA;AAAA;AAAA;AAAA,UADD;AAcH,CAnDD;;GAAMvB,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n\n} from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n    \n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n    \n    // Search Users\n\n    const SearchUsers = async text => {\n        setLoading();\n         \n         const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n        \n       dispatch({\n           type: SEARCH_USERS,\n           payload: res.data.items\n       })\n         \n       };\n\n\n    // Get User\n\n    // Get Repos\n\n\n    //Clear Users\n    \n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n    \n    //Set Loading\n       const setLoading = () => dispatch({ type: SET_LOADING })\n\n    return (\n     <GithubContext.Provider\n    value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        SearchUsers\n    }}\n    >\n        {props.children}\n\n    </GithubContext.Provider>\n );\n};\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}